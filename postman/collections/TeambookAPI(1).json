{
	"info": {
		"_postman_id": "bd506876-0297-4df6-8abf-e8f3bd2173ac",
		"name": "TeambookAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "17688954-bd506876-0297-4df6-8abf-e8f3bd2173ac"
	},
	"item": [
		{
			"name": "register new account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const token = pm.response.text();\r",
							"\r",
							"// Set the \"token\" variable\r",
							"pm.environment.set(\"token\", token);\r",
							"\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"id": "90393513-d143-4737-884f-e445344126ee"
					}
				}
			],
			"id": "56dc41a1-cc02-4d86-8c92-75fcc25658c0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "account_name",
							"value": "{{$randomCompanyName}}",
							"type": "text"
						},
						{
							"key": "user[first_name]",
							"value": "{{$randomFirstName}}",
							"type": "text"
						},
						{
							"key": "user[last_name]",
							"value": "{{$randomLastName}}",
							"type": "text"
						},
						{
							"key": "user[email]",
							"value": "{{$randomEmail}}",
							"type": "text"
						},
						{
							"key": "user[password]",
							"value": "Test123!",
							"type": "text"
						},
						{
							"key": "user[password_confirmation]",
							"value": "Test123!",
							"type": "text"
						},
						{
							"key": "user[marketing_emails]",
							"value": "true",
							"type": "text"
						},
						{
							"key": "user[timezone]",
							"value": "EDT",
							"type": "text"
						},
						{
							"key": "language",
							"value": "en",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://web.teambooktest.com/api/register",
					"protocol": "https",
					"host": [
						"web",
						"teambooktest",
						"com"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "get account settings without token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\", \"Cache-Control\");\r",
							"});"
						],
						"type": "text/javascript",
						"id": "36f66247-2be5-4a4f-a894-31e5ce93717b"
					}
				}
			],
			"id": "70bd08b0-a9fc-4a23-90ca-236973b660a7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://web.teambooktest.com/api/account/settings",
					"protocol": "https",
					"host": [
						"web",
						"teambooktest",
						"com"
					],
					"path": [
						"api",
						"account",
						"settings"
					]
				}
			},
			"response": []
		},
		{
			"name": "get  account settings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Преобразование JSON-строки в объект\r",
							"const responseJson = JSON.parse(responseBody);\r",
							"\r",
							"// Создание переменных из значений объекта\r",
							"pm.environment.set(\"accountId\", responseJson.id.toString());\r",
							"pm.globals.unset(\"variable_key\");\r",
							"pm.environment.set(\"account_name\", responseJson.name);\r",
							"\r",
							"// Доступ к вложенным значениям\r",
							"const adminUser = responseJson.admin_users[0];\r",
							"pm.environment.set(\"admin_id\", adminUser.id.toString());\r",
							"pm.environment.set(\"admin_first_name\", adminUser.first_name);\r",
							"pm.environment.set(\"admin_last_name\", adminUser.last_name);\r",
							"pm.environment.set(\"admin_email\", adminUser.email);\r",
							"pm.environment.set(\"calendar_token\", adminUser.calendar_token);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has required fields\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData.id).to.exist;\r",
							"    pm.expect(jsonData.name).to.exist;\r",
							"    pm.expect(jsonData.default_booking_duration).to.exist;\r",
							"    pm.expect(jsonData.first_week_day).to.exist;\r",
							"    pm.expect(jsonData.language).to.exist;\r",
							"    pm.expect(jsonData.schedule).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"name is not empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.not.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has required fields\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    const adminUser = responseJson.admin_users[0];\r",
							"    pm.expect(adminUser.id).to.exist;\r",
							"    pm.expect(adminUser.first_name).to.exist;\r",
							"    pm.expect(adminUser.last_name).to.exist;\r",
							"    pm.expect(adminUser.email).to.exist;\r",
							"    pm.expect(adminUser.calendar_token).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Verify time zone\", function () {\r",
							"    var expectedTimeZone = \"EDT\"\r",
							"  \r",
							"    var jsonData = pm.response.json();\r",
							"    var actualTimeZone = jsonData.time_zone;\r",
							"\r",
							"    pm.expect(actualTimeZone).to.equal(expectedTimeZone);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify language\", function () { \r",
							"    var expectedLanguage = \"en\";\r",
							"    var jsonData = pm.response.json();\r",
							"    var actualLanguage = jsonData.language;\r",
							"    pm.expect(actualLanguage).to.equal(expectedLanguage);\r",
							"});"
						],
						"type": "text/javascript",
						"id": "ea641a84-fd1b-4195-9cc5-54cf5686fdf3"
					}
				}
			],
			"id": "c9599ffe-8054-4924-aa90-f1fea903248f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://web.teambooktest.com/api/account/settings",
					"protocol": "https",
					"host": [
						"web",
						"teambooktest",
						"com"
					],
					"path": [
						"api",
						"account",
						"settings"
					]
				}
			},
			"response": []
		},
		{
			"name": "update account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has required fields\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData.id).to.exist;\r",
							"    pm.expect(jsonData.name).to.exist;\r",
							"    pm.expect(jsonData.default_booking_duration).to.exist;\r",
							"    pm.expect(jsonData.first_week_day).to.exist;\r",
							"    pm.expect(jsonData.language).to.exist;\r",
							"    pm.expect(jsonData.schedule).to.exist;\r",
							"});\r",
							"pm.test(\"Response body has required fields\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    const adminUser = responseJson.admin_users[0];\r",
							"    pm.expect(adminUser.id).to.exist;\r",
							"    pm.expect(adminUser.first_name).to.exist;\r",
							"    pm.expect(adminUser.last_name).to.exist;\r",
							"    pm.expect(adminUser.email).to.exist;\r",
							"    pm.expect(adminUser.calendar_token).to.exist;\r",
							"});"
						],
						"type": "text/javascript",
						"id": "f774dd25-b6ba-497c-aff9-d9420db521cb"
					}
				}
			],
			"id": "3081c8bd-5d20-419e-8d45-9cb1111b8c06",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "account[name]",
							"value": "{{account_name}}",
							"type": "text"
						},
						{
							"key": "account[default_booking_duration]",
							"value": "480",
							"type": "text"
						},
						{
							"key": "account[time_zone]",
							"value": "PCT",
							"type": "text"
						},
						{
							"key": "account[first_week_day]",
							"value": "{{$randomWeekday}}",
							"type": "text"
						},
						{
							"key": "account[date_format]",
							"value": "0",
							"type": "text"
						},
						{
							"key": "user[token]",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://web.teambooktest.com/api/account",
					"protocol": "https",
					"host": [
						"web",
						"teambooktest",
						"com"
					],
					"path": [
						"api",
						"account"
					]
				}
			},
			"response": []
		},
		{
			"name": "get  profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = JSON.parse(responseBody);\r",
							"pm.environment.set(\"calendar_token\", responseJson.calendar_token);\r",
							"pm.environment.set(\"team_ids\", responseJson.team_ids);\r",
							"pm.environment.set(\"time_zone\", responseJson.time_zone)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has required fields\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData.id).to.exist;\r",
							"    pm.expect(jsonData.first_name).to.exist;\r",
							"    pm.expect(jsonData.last_name).to.exist;\r",
							"    pm.expect(jsonData.email).to.exist;\r",
							"    pm.expect(jsonData.account_id).to.exist;\r",
							"    pm.expect(jsonData.calendar_token).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"id": "966d2d45-4c3c-47e5-a045-d45d23b68cdc"
					}
				}
			],
			"id": "807f7008-5840-4816-891c-5c4c526b88f5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://web.teambooktest.com/api/profile",
					"protocol": "https",
					"host": [
						"web",
						"teambooktest",
						"com"
					],
					"path": [
						"api",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "get  team users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"var expectedId = pm.environment.get(\"admin_id\");\r",
							"pm.test(\"Check id\", function () {\r",
							"    pm.expect(jsonData[0].id.toString()).to.eql(expectedId);\r",
							"});\r",
							"\r",
							"var expectedFirstName = pm.environment.get(\"admin_first_name\");\r",
							"pm.test(\"Check first_name\", function () {\r",
							"    pm.expect(jsonData[0].first_name).to.eql(expectedFirstName);\r",
							"});\r",
							"\r",
							"var expectedLastName = pm.environment.get(\"admin_last_name\");\r",
							"pm.test(\"Check last_name\", function () {\r",
							"    pm.expect(jsonData[0].last_name).to.eql(expectedLastName);\r",
							"});\r",
							"\r",
							"var expectedEmail = pm.environment.get(\"admin_email\");\r",
							"pm.test(\"Check email\", function () {\r",
							"    pm.expect(jsonData[0].email).to.eql(expectedEmail);\r",
							"});\r",
							"\r",
							"var expectedTimeZone = pm.environment.get(\"time_zone\");\r",
							"pm.test(\"Check time_zone\", function () {\r",
							"    pm.expect(jsonData[0].time_zone).to.eql(expectedTimeZone);\r",
							"});\r",
							"\r",
							"var expectedAccountId = pm.environment.get(\"accountId\");\r",
							"pm.test(\"Check account_id\", function () {\r",
							"    pm.expect(jsonData[0].account_id.toString()).to.eql(expectedAccountId);\r",
							"});"
						],
						"type": "text/javascript",
						"id": "2758523a-e2dc-48a1-bd68-028c0913c3f8"
					}
				}
			],
			"id": "dfddbf75-17e8-4daf-8c8e-6c181ee84620",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://web.teambooktest.com/api/team/{{team_ids}}/get_users",
					"protocol": "https",
					"host": [
						"web",
						"teambooktest",
						"com"
					],
					"path": [
						"api",
						"team",
						"{{team_ids}}",
						"get_users"
					]
				}
			},
			"response": []
		},
		{
			"name": "create customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"customer_id\", jsonData.id);\r",
							"pm.environment.set(\"customer_name\", jsonData.name);\r",
							"\r",
							"pm.environment.set(\"braintree_customer_id\", jsonData.braintree_customer_id);\r",
							"pm.environment.set(\"api_token\", jsonData.api_token);\r",
							"pm.environment.set(\"coupon\", jsonData.coupon);\r",
							"\r",
							"pm.environment.set(\"admin_id\", jsonData.admin_users[0].id);\r",
							"pm.environment.set(\"admin_first_name\", jsonData.admin_users[0].first_name);\r",
							"pm.environment.set(\"admin_last_name\", jsonData.admin_users[0].last_name);\r",
							"pm.environment.set(\"admin_name\", jsonData.admin_users[0].name);\r",
							"pm.environment.set(\"admin_email\", jsonData.admin_users[0].email);\r",
							"\r",
							"pm.environment.set(\"admin_account_id\", jsonData.admin_users[0].account_id);\r",
							"pm.environment.set(\"admin_calendar_token\", jsonData.admin_users[0].calendar_token);\r",
							"\r",
							"pm.environment.set(\"subscription_id\", jsonData.subscription.id);\r",
							"pm.environment.set(\"subscription_account_id\", jsonData.subscription.account_id);\r",
							"pm.environment.set(\"subscription_plan_id\", jsonData.subscription.plan_id);\r",
							"\r",
							"\r",
							"pm.environment.set(\"braintree_plan_id\", jsonData.braintree_plan.id);\r",
							"pm.environment.set(\"braintree_plan_name\", jsonData.braintree_plan.plan_name);\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\", \"Cache-Control\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has required fields\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData.id).to.exist;\r",
							"    pm.expect(jsonData.name).to.exist;\r",
							"    pm.expect(jsonData.default_booking_duration).to.exist;\r",
							"    pm.expect(jsonData.first_week_day).to.exist;\r",
							"    pm.expect(jsonData.language).to.exist;\r",
							"    pm.expect(jsonData.schedule).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"name is not empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.not.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has required fields\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    const adminUser = responseJson.admin_users[0];\r",
							"    pm.expect(adminUser.id).to.exist;\r",
							"    pm.expect(adminUser.first_name).to.exist;\r",
							"    pm.expect(adminUser.last_name).to.exist;\r",
							"    pm.expect(adminUser.email).to.exist;\r",
							"    pm.expect(adminUser.calendar_token).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"id": "45125bd3-359a-4990-80ba-e41751525afc"
					}
				}
			],
			"id": "895c1ee0-a374-406e-b16a-d5f428b77f24",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "first_name",
							"value": "{{$randomFirstName}}",
							"type": "text"
						},
						{
							"key": "last_name",
							"value": "{{$randomLastName}}",
							"type": "text"
						},
						{
							"key": "email",
							"value": "{{$randomEmail}}",
							"type": "text"
						},
						{
							"key": "country",
							"value": "{{$randomCountry}}",
							"type": "text"
						},
						{
							"key": "company_name",
							"value": "{{$randomCompanyName}}",
							"type": "text"
						},
						{
							"key": "city",
							"value": "{{$randomCity}}",
							"type": "text"
						},
						{
							"key": "postal_code",
							"value": "{{$randomCountryCode}}",
							"type": "text"
						},
						{
							"key": "street_address",
							"value": "{{$randomStreetAddress}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://web.teambooktest.com/api/billing/create_customer",
					"protocol": "https",
					"host": [
						"web",
						"teambooktest",
						"com"
					],
					"path": [
						"api",
						"billing",
						"create_customer"
					]
				}
			},
			"response": []
		},
		{
			"name": "update customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});"
						],
						"type": "text/javascript",
						"id": "be1f46d8-45f9-4b0d-a515-582ee9e4a900"
					}
				}
			],
			"id": "c42cbebd-ac8c-433a-92d6-7f6d190e4237",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "first_name",
							"value": "{{$randomFirstName}}",
							"type": "text"
						},
						{
							"key": "last_name",
							"value": "{{$randomLastName}}",
							"type": "text"
						},
						{
							"key": "email",
							"value": "{{admin_email}}",
							"type": "text"
						},
						{
							"key": "country",
							"value": "{{$randomCountry}}",
							"type": "text"
						},
						{
							"key": "company_name",
							"value": "{{account_name}}",
							"type": "text"
						},
						{
							"key": "city",
							"value": "{{$randomCity}}",
							"type": "text"
						},
						{
							"key": "postal_code",
							"value": "{{$randomCountryCode}}",
							"type": "text"
						},
						{
							"key": "street_address",
							"value": "{{$randomStreetAddress}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://web.teambooktest.com/api/billing/update_customer",
					"protocol": "https",
					"host": [
						"web",
						"teambooktest",
						"com"
					],
					"path": [
						"api",
						"billing",
						"update_customer"
					]
				}
			},
			"response": []
		},
		{
			"name": "get  customer info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has required fields\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData.first_name).to.exist;\r",
							"    pm.expect(jsonData.last_name).to.exist;\r",
							"    pm.expect(jsonData.email).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\", \"Cache-Control\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"id": "247f97d4-33b0-417e-b14a-487e12f21722"
					}
				}
			],
			"id": "cfeaf946-267c-46a3-b06b-35b8f55b9adb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://web.teambooktest.com/api/billing/customer_info",
					"protocol": "https",
					"host": [
						"web",
						"teambooktest",
						"com"
					],
					"path": [
						"api",
						"billing",
						"customer_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get calendar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"id": "661a88ab-f326-4051-9065-630e095f6f51"
					}
				}
			],
			"id": "9889d581-50b3-49e1-bfcb-5fa62f143930",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "token",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "https://web.teambooktest.com/api/calendar/{{calendar_token}}",
					"protocol": "https",
					"host": [
						"web",
						"teambooktest",
						"com"
					],
					"path": [
						"api",
						"calendar",
						"{{calendar_token}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "login admin with wrong password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"id": "3f60d4a8-ad5e-4d19-878f-9ed911db886b"
					}
				}
			],
			"id": "cf3560df-2782-403d-919f-49b7c5579065",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "{{admin_email}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Test123!",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://web.teambooktest.com/api/administration/login",
					"protocol": "https",
					"host": [
						"web",
						"teambooktest",
						"com"
					],
					"path": [
						"api",
						"administration",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete accaunt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\", \"Cache-Control\", );\r",
							"});"
						],
						"type": "text/javascript",
						"id": "22f00255-5056-4fa1-9008-17b6594b2b46"
					}
				}
			],
			"id": "66095b53-3cfa-4ee0-8b49-583903dad024",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://web.teambooktest.com/api/account",
					"protocol": "https",
					"host": [
						"web",
						"teambooktest",
						"com"
					],
					"path": [
						"api",
						"account"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMDgxMSwiZXhwIjoiMTgzOTc4NzU0NCJ9.tXLLhXcBz4Ww1qZPTSP4rsNuwFG3nQo4ND7Qj8zHdUE",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "d9225a59-e118-499b-8866-e5ad418184f0"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "f0c87975-0d55-4045-ae38-5955fb50a5d6"
			}
		}
	]
}